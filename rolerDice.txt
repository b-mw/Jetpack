
package com.app.rolerdise

import android.os.Bundle
import androidx.activity.ComponentActivity
import androidx.activity.compose.setContent
import androidx.compose.foundation.Image
import androidx.compose.foundation.layout.*
import androidx.compose.material.Button
import androidx.compose.material.Text
import androidx.compose.runtime.*
import androidx.compose.ui.Alignment
import androidx.compose.ui.Modifier
import androidx.compose.ui.res.painterResource
import androidx.compose.ui.tooling.preview.Preview
import androidx.compose.ui.unit.dp
import com.app.rolerdise.ui.theme.RolerDiseTheme


class MainActivity : ComponentActivity() {
    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        setContent {
            RolerDiseTheme {
                // A surface container using the 'background' color from the theme
                RolerDise()
            }
        }
    }
    }







@Preview
@Composable
fun RolerDise (){
    RolerWithButton(
        modifier = Modifier
            .fillMaxSize()
            .wrapContentSize(Alignment.Center)
    )
}






@Composable
fun RolerWithButton(modifier: Modifier=Modifier){
    var result by remember { mutableStateOf( 1) }
    val imageResource = when(result) {
        1 -> R.drawable.dice_1
        2 -> R.drawable.dice_2
        3 -> R.drawable.dice_3
        4 -> R.drawable.dice_4
        5 -> R.drawable.dice_5
        else -> R.drawable.dice_6
    }

        Column(
        modifier = modifier,
        horizontalAlignment = Alignment.CenterHorizontally
    ) {
        Button(onClick = {
            println("Clicked")
            result = (1..6).random()

        }) {
            Text(text = "Click me to roll")
        }
        Spacer(modifier = Modifier.height(20.dp))
        Image(painter = painterResource(id = imageResource), contentDescription = null)
    }
}